"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Version(google.protobuf.message.Message):
    """NextId: 7"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAJOR_VERSION_FIELD_NUMBER: builtins.int
    MINOR_VERSION_FIELD_NUMBER: builtins.int
    IS_ALPHA_FIELD_NUMBER: builtins.int
    IS_BETA_FIELD_NUMBER: builtins.int
    IS_RELEASE_CANDIDATE_FIELD_NUMBER: builtins.int
    IS_RELEASE_FIELD_NUMBER: builtins.int
    major_version: builtins.int
    minor_version: builtins.int
    is_alpha: builtins.bool
    is_beta: builtins.bool
    is_release_candidate: builtins.bool
    is_release: builtins.bool
    def __init__(
        self,
        *,
        major_version: builtins.int = ...,
        minor_version: builtins.int = ...,
        is_alpha: builtins.bool = ...,
        is_beta: builtins.bool = ...,
        is_release_candidate: builtins.bool = ...,
        is_release: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_alpha", b"is_alpha", "is_beta", b"is_beta", "is_release", b"is_release", "is_release_candidate", b"is_release_candidate", "major_version", b"major_version", "minor_version", b"minor_version"]) -> None: ...

global___Version = Version

class NodeInfo(google.protobuf.message.Message):
    """Contains information to uniquely describe a node.
    NextId: 7
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _NodeSupportedCommunicationTypes:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _NodeSupportedCommunicationTypesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NodeInfo._NodeSupportedCommunicationTypes.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 0
        SECURE: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 1
        UNSECURE: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 2
        SECURE_AND_UNSECURE: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 3
        SECURE_STREAM: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 4
        UNSECURE_STREAM: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 5
        SECURE_AND_UNSECURE_STREAM: NodeInfo._NodeSupportedCommunicationTypes.ValueType  # 6

    class NodeSupportedCommunicationTypes(_NodeSupportedCommunicationTypes, metaclass=_NodeSupportedCommunicationTypesEnumTypeWrapper):
        """Identifies if the RPC channel is secure or unsecure. The secure option currently only supports SSL."""

    UNKNOWN: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 0
    SECURE: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 1
    UNSECURE: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 2
    SECURE_AND_UNSECURE: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 3
    SECURE_STREAM: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 4
    UNSECURE_STREAM: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 5
    SECURE_AND_UNSECURE_STREAM: NodeInfo.NodeSupportedCommunicationTypes.ValueType  # 6

    class _NodeType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _NodeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NodeInfo._NodeType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN_NODE_TYPE: NodeInfo._NodeType.ValueType  # 0
        SERVER_AND_CLIENT: NodeInfo._NodeType.ValueType  # 1
        """Indicates the node is a full node. It has both server and client capabilities. It can potentially
        be used as a relay server if {@code is_forwarding_enabled} bit is set to true.
        """
        CLIENT_ONLY: NodeInfo._NodeType.ValueType  # 2
        """This is a client only node. It has no ability to relay messages. It can only send messages to a forwarding
        server.
        """

    class NodeType(_NodeType, metaclass=_NodeTypeEnumTypeWrapper): ...
    UNKNOWN_NODE_TYPE: NodeInfo.NodeType.ValueType  # 0
    SERVER_AND_CLIENT: NodeInfo.NodeType.ValueType  # 1
    """Indicates the node is a full node. It has both server and client capabilities. It can potentially
    be used as a relay server if {@code is_forwarding_enabled} bit is set to true.
    """
    CLIENT_ONLY: NodeInfo.NodeType.ValueType  # 2
    """This is a client only node. It has no ability to relay messages. It can only send messages to a forwarding
    server.
    """

    NODE_ADDRESS_FIELD_NUMBER: builtins.int
    NODE_TYPE_FIELD_NUMBER: builtins.int
    SOFTWARE_VERSION_FIELD_NUMBER: builtins.int
    SUPPORTED_COMMUNICATION_TYPES_FIELD_NUMBER: builtins.int
    IS_FORWARDING_ENABLED_FIELD_NUMBER: builtins.int
    FORWARDING_PUBLIC_KEY_FIELD_NUMBER: builtins.int
    node_address: builtins.str
    """The fully-qualified node address. It's a host:port combination."""
    node_type: global___NodeInfo.NodeType.ValueType
    @property
    def software_version(self) -> global___Version:
        """The software version the node is running. Major versions start at 0, minor versions start at 1."""
    supported_communication_types: global___NodeInfo.NodeSupportedCommunicationTypes.ValueType
    """Whether the node supports secure, unsecure, or both gRPC communication types."""
    is_forwarding_enabled: builtins.bool
    forwarding_public_key: builtins.str
    def __init__(
        self,
        *,
        node_address: builtins.str = ...,
        node_type: global___NodeInfo.NodeType.ValueType = ...,
        software_version: global___Version | None = ...,
        supported_communication_types: global___NodeInfo.NodeSupportedCommunicationTypes.ValueType = ...,
        is_forwarding_enabled: builtins.bool = ...,
        forwarding_public_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["software_version", b"software_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["forwarding_public_key", b"forwarding_public_key", "is_forwarding_enabled", b"is_forwarding_enabled", "node_address", b"node_address", "node_type", b"node_type", "software_version", b"software_version", "supported_communication_types", b"supported_communication_types"]) -> None: ...

global___NodeInfo = NodeInfo

class NodeSecret(google.protobuf.message.Message):
    """Contains secret data of a node. This is never to be shared with a second party.
    NextId: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECRET_PRIVATE_KEY_FIELD_NUMBER: builtins.int
    SECRET_NODE_PRIMER_FIELD_NUMBER: builtins.int
    SECRET_AMPLICON_THRESHOLD_FIELD_NUMBER: builtins.int
    secret_private_key: builtins.str
    """A ed25519 private key."""
    secret_node_primer: builtins.str
    secret_amplicon_threshold: builtins.int
    """An integer indicating the threshold values for message Amplicons, below which the messages are dropped."""
    def __init__(
        self,
        *,
        secret_private_key: builtins.str = ...,
        secret_node_primer: builtins.str = ...,
        secret_amplicon_threshold: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["secret_amplicon_threshold", b"secret_amplicon_threshold", "secret_node_primer", b"secret_node_primer", "secret_private_key", b"secret_private_key"]) -> None: ...

global___NodeSecret = NodeSecret

class NodeProperties(google.protobuf.message.Message):
    """Contains all publicly publishable descriptions and private secrets of a node.
    NextId: 8
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_INFO_FIELD_NUMBER: builtins.int
    NODE_SECRETS_FIELD_NUMBER: builtins.int
    MAX_PEERS_FIELD_NUMBER: builtins.int
    CAN_EXCEED_MAX_PEERS_IF_DESTINATION_NODE_NOT_REACHABLE_FIELD_NUMBER: builtins.int
    MAX_TIME_TO_WAIT_FOR_DESTINATION_NODE_RESPONSE_MS_FIELD_NUMBER: builtins.int
    ENABLE_FORWARDING_SERVER_FIELD_NUMBER: builtins.int
    MAX_CANDIDATES_PER_REQUEST_FOR_VALID_DNA_SEARCH_FOR_FORWARDING_CLIENT_FIELD_NUMBER: builtins.int
    BOOTSTRAP_PEERS_LIST_FIELD_NUMBER: builtins.int
    @property
    def node_info(self) -> global___NodeInfo: ...
    @property
    def node_secrets(self) -> global___NodeSecret: ...
    max_peers: builtins.int
    """The value of max_peers when negative (-1) implies no limit."""
    can_exceed_max_peers_if_destination_node_not_reachable: builtins.bool
    max_time_to_wait_for_destination_node_response_ms: builtins.int
    enable_forwarding_server: builtins.bool
    """This flag enables/disables packet forwarding."""
    max_candidates_per_request_for_valid_dna_search_for_forwarding_client: builtins.int
    @property
    def bootstrap_peers_list(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeInfo]: ...
    def __init__(
        self,
        *,
        node_info: global___NodeInfo | None = ...,
        node_secrets: global___NodeSecret | None = ...,
        max_peers: builtins.int = ...,
        can_exceed_max_peers_if_destination_node_not_reachable: builtins.bool = ...,
        max_time_to_wait_for_destination_node_response_ms: builtins.int = ...,
        enable_forwarding_server: builtins.bool = ...,
        max_candidates_per_request_for_valid_dna_search_for_forwarding_client: builtins.int = ...,
        bootstrap_peers_list: collections.abc.Iterable[global___NodeInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node_info", b"node_info", "node_secrets", b"node_secrets"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bootstrap_peers_list", b"bootstrap_peers_list", "can_exceed_max_peers_if_destination_node_not_reachable", b"can_exceed_max_peers_if_destination_node_not_reachable", "enable_forwarding_server", b"enable_forwarding_server", "max_candidates_per_request_for_valid_dna_search_for_forwarding_client", b"max_candidates_per_request_for_valid_dna_search_for_forwarding_client", "max_peers", b"max_peers", "max_time_to_wait_for_destination_node_response_ms", b"max_time_to_wait_for_destination_node_response_ms", "node_info", b"node_info", "node_secrets", b"node_secrets"]) -> None: ...

global___NodeProperties = NodeProperties

class ResponseStatus(google.protobuf.message.Message):
    """NextId: 3"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_SUCCESSFUL_FIELD_NUMBER: builtins.int
    STATUS_TEXT_FIELD_NUMBER: builtins.int
    is_successful: builtins.bool
    status_text: builtins.str
    def __init__(
        self,
        *,
        is_successful: builtins.bool = ...,
        status_text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_successful", b"is_successful", "status_text", b"status_text"]) -> None: ...

global___ResponseStatus = ResponseStatus

class GetNodeInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___GetNodeInfoRequest = GetNodeInfoRequest

class GetNodeInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    @property
    def response_status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        response_status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___GetNodeInfoResponse = GetNodeInfoResponse

class GetPeersListRequest(google.protobuf.message.Message):
    """NextId: 4"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    MAX_DESIRED_PEERS_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    max_desired_peers: builtins.int
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        max_desired_peers: builtins.int = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_desired_peers", b"max_desired_peers", "request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___GetPeersListRequest = GetPeersListRequest

class GetPeersListResponse(google.protobuf.message.Message):
    """NextId: 3"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PEERS_LIST_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def peers_list(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeInfo]: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        peers_list: collections.abc.Iterable[global___NodeInfo] | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["peers_list", b"peers_list", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___GetPeersListResponse = GetPeersListResponse

class AddNodeToPeersListRequest(google.protobuf.message.Message):
    """NextId: 3"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___AddNodeToPeersListRequest = AddNodeToPeersListRequest

class AddNodeToPeersListResponse(google.protobuf.message.Message):
    """NextId: 4"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    @property
    def response_status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        response_status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___AddNodeToPeersListResponse = AddNodeToPeersListResponse

class ConnectAsPeerRequest(google.protobuf.message.Message):
    """NextId: 3"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___ConnectAsPeerRequest = ConnectAsPeerRequest

class ConnectAsPeerResponse(google.protobuf.message.Message):
    """nextId:4"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    @property
    def response_status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        response_status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___ConnectAsPeerResponse = ConnectAsPeerResponse

class IsNodeLiveRequest(google.protobuf.message.Message):
    """NextId: 3"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___IsNodeLiveRequest = IsNodeLiveRequest

class IsNodeLiveResponse(google.protobuf.message.Message):
    """NextId: 4"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    IS_LIVE_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    is_live: builtins.bool
    @property
    def response_status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        is_live: builtins.bool = ...,
        response_status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_live", b"is_live", "responding_node", b"responding_node", "response_status", b"response_status", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___IsNodeLiveResponse = IsNodeLiveResponse

class MessageEndpointId(google.protobuf.message.Message):
    """The following information uniquely identifies a message's destination.
    The public-key uniquely identifies the destination node. However, if the destination node is listening
    behind a relay-node (which has a forwarder_public_key), the combination of the forwarder's public key
    {@code forwarder_public_key} and the endpoint listen id {@code endpoint_public_key} can be used.
    NextId: 3
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENDPOINT_PUBLIC_KEY_FIELD_NUMBER: builtins.int
    FORWARDER_PUBLIC_KEY_FIELD_NUMBER: builtins.int
    endpoint_public_key: builtins.str
    forwarder_public_key: builtins.str
    def __init__(
        self,
        *,
        endpoint_public_key: builtins.str = ...,
        forwarder_public_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["endpoint_public_key", b"endpoint_public_key", "forwarder_public_key", b"forwarder_public_key"]) -> None: ...

global___MessageEndpointId = MessageEndpointId

class EnqueueFindValidMessageDnaRequest(google.protobuf.message.Message):
    """This is the request for finding a working message DNA of length {@code dna_length} to reach the destination
    specified by {@code destination_id}. In case, the requesting client doesn't want to reveal any information
    regarding the intended destination, the client can specify {@code encrypted_handshake_payload} instead of
    {@code destination_id}.
    NextId: 6
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    DNA_LENGTH_FIELD_NUMBER: builtins.int
    DESTINATION_ID_FIELD_NUMBER: builtins.int
    SOURCE_ID_FIELD_NUMBER: builtins.int
    ENCRYPTED_HANDSHAKE_PAYLOAD_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    dna_length: builtins.int
    """The DNA length desired."""
    @property
    def destination_id(self) -> global___MessageEndpointId:
        """Either the destination_id or the encrypted_handshake_payload needs to be specified."""
    @property
    def source_id(self) -> global___MessageEndpointId:
        """If the node issuing the request is listening behind a forwarding node, it has to specify a {@ code source_id}
        especially the {@code chained_public_key} component. The way it works is as follows:
        The (message) source tries to find an optimal DNA of length {@code: dna_length} to reach destination
        identified by some {@code MessageEndpointId}, to establish a session. The search works as follows:
        a. The source specifies the {@code MessageEndpointId} identifying the destination it's trying to reach.
        b. The source node or the relay server, next creates a handshake packet. The encrypted payload [Encrypted using
        information in {@code destination_id} ] of this packet contains the source_id. This way upon successful decryption
        the intended destination is able to send an ACKNOWLEDGEMENT packet back to source.
        Alternatively, the messaging source can directly specify the contents of the {@code encrypted_handshake_payload}
        forgoing step a above. This safeguards the information regarding the intended destination.
        """
    @property
    def encrypted_handshake_payload(self) -> global___EncryptedMessageCoreInformation: ...
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        dna_length: builtins.int = ...,
        destination_id: global___MessageEndpointId | None = ...,
        source_id: global___MessageEndpointId | None = ...,
        encrypted_handshake_payload: global___EncryptedMessageCoreInformation | None = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination_id", b"destination_id", "encrypted_handshake_payload", b"encrypted_handshake_payload", "requesting_node", b"requesting_node", "source_id", b"source_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination_id", b"destination_id", "dna_length", b"dna_length", "encrypted_handshake_payload", b"encrypted_handshake_payload", "request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node", "source_id", b"source_id"]) -> None: ...

global___EnqueueFindValidMessageDnaRequest = EnqueueFindValidMessageDnaRequest

class EnqueueFindValidMessageDnaResponse(google.protobuf.message.Message):
    """NextId: 4"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ESTIMATED_WAIT_TIME_FOR_RESPONSE_MS_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    request_id: builtins.str
    estimated_wait_time_for_response_ms: builtins.int
    @property
    def response_status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        request_id: builtins.str = ...,
        estimated_wait_time_for_response_ms: builtins.int = ...,
        response_status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["estimated_wait_time_for_response_ms", b"estimated_wait_time_for_response_ms", "request_id", b"request_id", "responding_node", b"responding_node", "response_status", b"response_status", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___EnqueueFindValidMessageDnaResponse = EnqueueFindValidMessageDnaResponse

class GetFoundMessageDnaRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    request_id: builtins.str
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        requesting_node: global___NodeInfo | None = ...,
        request_id: builtins.str = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id", b"request_id", "request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___GetFoundMessageDnaRequest = GetFoundMessageDnaRequest

class GetFoundMessageDnaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    FOUND_MESSAGE_DNA_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    request_id: builtins.str
    @property
    def found_message_dna(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def response_status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        request_id: builtins.str = ...,
        found_message_dna: collections.abc.Iterable[builtins.str] | None = ...,
        response_status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_status", b"response_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["found_message_dna", b"found_message_dna", "request_id", b"request_id", "responding_node", b"responding_node", "response_status", b"response_status", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos"]) -> None: ...

global___GetFoundMessageDnaResponse = GetFoundMessageDnaResponse

class MessageCoreInformation(google.protobuf.message.Message):
    """NextId: 5"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _MessageType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _MessageTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[MessageCoreInformation._MessageType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNSPECIFIED: MessageCoreInformation._MessageType.ValueType  # 0
        HANDSHAKE: MessageCoreInformation._MessageType.ValueType  # 1
        ACKNOWLEDGEMENT_HANDSHAKE: MessageCoreInformation._MessageType.ValueType  # 2
        BINARY_CONTENT: MessageCoreInformation._MessageType.ValueType  # 3
        ACKNOWLEDGEMENT_BINARY_CONTENT: MessageCoreInformation._MessageType.ValueType  # 4

    class MessageType(_MessageType, metaclass=_MessageTypeEnumTypeWrapper): ...
    UNSPECIFIED: MessageCoreInformation.MessageType.ValueType  # 0
    HANDSHAKE: MessageCoreInformation.MessageType.ValueType  # 1
    ACKNOWLEDGEMENT_HANDSHAKE: MessageCoreInformation.MessageType.ValueType  # 2
    BINARY_CONTENT: MessageCoreInformation.MessageType.ValueType  # 3
    ACKNOWLEDGEMENT_BINARY_CONTENT: MessageCoreInformation.MessageType.ValueType  # 4

    MESSAGE_TYPE_FIELD_NUMBER: builtins.int
    MESSAGE_PAYLOAD_FIELD_NUMBER: builtins.int
    SOURCE_ID_FIELD_NUMBER: builtins.int
    DESTINATION_ID_FIELD_NUMBER: builtins.int
    NONCE_FIELD_NUMBER: builtins.int
    MESSAGE_HASH_FIELD_NUMBER: builtins.int
    message_type: global___MessageCoreInformation.MessageType.ValueType
    message_payload: builtins.bytes
    @property
    def source_id(self) -> global___MessageEndpointId: ...
    @property
    def destination_id(self) -> global___MessageEndpointId: ...
    nonce: builtins.int
    message_hash: builtins.str
    def __init__(
        self,
        *,
        message_type: global___MessageCoreInformation.MessageType.ValueType = ...,
        message_payload: builtins.bytes = ...,
        source_id: global___MessageEndpointId | None = ...,
        destination_id: global___MessageEndpointId | None = ...,
        nonce: builtins.int = ...,
        message_hash: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination_id", b"destination_id", "source_id", b"source_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination_id", b"destination_id", "message_hash", b"message_hash", "message_payload", b"message_payload", "message_type", b"message_type", "nonce", b"nonce", "source_id", b"source_id"]) -> None: ...

global___MessageCoreInformation = MessageCoreInformation

class EncryptedMessageCoreInformation(google.protobuf.message.Message):
    """NextId: 2"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENCRYPTED_MESSAGE_CONTENT_FIELD_NUMBER: builtins.int
    encrypted_message_content: builtins.bytes
    def __init__(
        self,
        *,
        encrypted_message_content: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["encrypted_message_content", b"encrypted_message_content"]) -> None: ...

global___EncryptedMessageCoreInformation = EncryptedMessageCoreInformation

class AmpliconP2PRelayMessage(google.protobuf.message.Message):
    """NextId:4"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_ID_FIELD_NUMBER: builtins.int
    ENCRYPTED_MESSAGE_CORE_FIELD_NUMBER: builtins.int
    MESSAGE_DNA_FIELD_NUMBER: builtins.int
    message_id: builtins.str
    @property
    def encrypted_message_core(self) -> global___EncryptedMessageCoreInformation: ...
    message_dna: builtins.str
    def __init__(
        self,
        *,
        message_id: builtins.str = ...,
        encrypted_message_core: global___EncryptedMessageCoreInformation | None = ...,
        message_dna: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["encrypted_message_core", b"encrypted_message_core"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["encrypted_message_core", b"encrypted_message_core", "message_dna", b"message_dna", "message_id", b"message_id"]) -> None: ...

global___AmpliconP2PRelayMessage = AmpliconP2PRelayMessage

class HandShakePayload(google.protobuf.message.Message):
    """NextId: 2"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id", b"request_id"]) -> None: ...

global___HandShakePayload = HandShakePayload

class RelayMessageRequest(google.protobuf.message.Message):
    """NextId: 5"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    REQUESTING_NODE_FIELD_NUMBER: builtins.int
    REQUEST_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def message(self) -> global___AmpliconP2PRelayMessage: ...
    @property
    def requesting_node(self) -> global___NodeInfo: ...
    request_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        message: global___AmpliconP2PRelayMessage | None = ...,
        requesting_node: global___NodeInfo | None = ...,
        request_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["message", b"message", "requesting_node", b"requesting_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "request_utc_timestamp_nanos", b"request_utc_timestamp_nanos", "requesting_node", b"requesting_node"]) -> None: ...

global___RelayMessageRequest = RelayMessageRequest

class RelayMessageResponse(google.protobuf.message.Message):
    """NextId: 5"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONDING_NODE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    RESPONSE_UTC_TIMESTAMP_NANOS_FIELD_NUMBER: builtins.int
    @property
    def responding_node(self) -> global___NodeInfo: ...
    @property
    def status(self) -> global___ResponseStatus: ...
    response_utc_timestamp_nanos: builtins.int
    def __init__(
        self,
        *,
        responding_node: global___NodeInfo | None = ...,
        status: global___ResponseStatus | None = ...,
        response_utc_timestamp_nanos: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["responding_node", b"responding_node", "response_utc_timestamp_nanos", b"response_utc_timestamp_nanos", "status", b"status"]) -> None: ...

global___RelayMessageResponse = RelayMessageResponse

class PackableRelayMessageInfo(google.protobuf.message.Message):
    """NextId: 3"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGINAL_MESSAGE_FIELD_NUMBER: builtins.int
    DECRYPTED_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def original_message(self) -> global___AmpliconP2PRelayMessage: ...
    @property
    def decrypted_message(self) -> global___MessageCoreInformation: ...
    def __init__(
        self,
        *,
        original_message: global___AmpliconP2PRelayMessage | None = ...,
        decrypted_message: global___MessageCoreInformation | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["decrypted_message", b"decrypted_message", "original_message", b"original_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["decrypted_message", b"decrypted_message", "original_message", b"original_message"]) -> None: ...

global___PackableRelayMessageInfo = PackableRelayMessageInfo
